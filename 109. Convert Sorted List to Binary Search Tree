Given the head of a singly linked list where elements are sorted in ascending order, convert it to a height-balanced binary search tree.
Example 1:
Input: head = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]
Explanation: One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST.

 TreeNode*bs(vector<int>&ans,int l,int r)
    {
        if(l>r) return NULL;
        int mid=l+(r-l)/2;
        TreeNode*node=new TreeNode(ans[mid]);
        node->left=bs(ans,l,mid-1);
        node->right=bs(ans,mid+1,r);
        return node;
    }
    TreeNode* sortedListToBST(ListNode* head) {
        vector<int>ans;
        while(head!=NULL)
        {
            ans.push_back(head->val);
            head=head->next;
        }
        int s=ans.size();
        return bs(ans,0,s-1);
    }
